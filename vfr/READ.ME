Verification Rig Software
==========================

This folder contains the software which runs automated tests on fibre
positioners installed on the verification rig.

The software is invoked by the Python script

	vfrig
	
which is found in the top-level folder (FPUVerification). The command
options and help text associated with this script are defined in
options.py and helptext.py.

The file conf.py contains a collection of global parameters which may
be used to fine-tune the verification procedures.

The exact procedures run by the verification software depend on a
logic defined in tasks_config.py and TaskLogic.py. In essence:

* tasks_config.py defines a collection of verification procedures
  which may be run.

* Each verification procedure normally consists of a data collection
  stage (verification procedure) followed by a data analysis stage
  (evaluation procedure).

* The user can request any verification procedure to be run. Each
  data collection procedure is normally run only once for each FPU,
  but the user can force a repeat. Evaluation procedures can be
  repeated any number of times.
  
* Many of the tasks depend on each-other so that, for example, task
  B cannot be run until task A has been completed. The task logic
  uses these dependencies to decide exactly which procedures to run
  in response to a user request.
  
* The results from each verification run are stored in a database,
  with the serial number of each FPU as the unique key.

See the documentation within the vfrig script for more details.

Data collection scripts may be found in the folder "verification_tasks".
Data evaluation functions may be found in the folder "evaluation".
Database management utilityes may be found in the folder "db".
Reporting and plotting functions may be found in the folder "output".

The scripts use the following common utilities:

* rig.py, connection.py hw.py and hw_simulation manage the access to the
  verification rig hardware.

* auditlog.py manages the log messages generated by the software. 

* tests_common.py contains verification functions which are common to
  all tests.

* posdb.py can be used to initialise the FPU database.

